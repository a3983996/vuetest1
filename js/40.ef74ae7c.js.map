{"version":3,"file":"js/40.ef74ae7c.js","mappings":"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","sources":["webpack://simpletest1/./src/views/DashboardView.vue","webpack://simpletest1/./src/components/NavbarComponent.vue","webpack://simpletest1/./src/components/NavbarComponent.vue?3cc2","webpack://simpletest1/../src/index.ts","webpack://simpletest1/./src/methods/emitter.js","webpack://simpletest1/./src/methods/pushMessagesState.js","webpack://simpletest1/./src/views/DashboardView.vue?7280"],"sourcesContent":["<template>\r\n  <Navbar></Navbar>\r\n  <div class=\"container-fluid\">\r\n    <router-view />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Navbar from \"@/components/NavbarComponent.vue\";\r\nimport emitter from \"@/methods/emitter\";\r\nimport pushMessagesState from \"@/methods/pushMessagesState\";\r\nexport default {\r\n  components: {\r\n    Navbar,\r\n  },\r\n  created() {\r\n    const token = document.cookie.replace(\r\n      /(?:(?:^|.*;\\s*)hexToken\\s*=\\s*([^;]*).*$)|^.*$/,\r\n      \"$1\"\r\n    );\r\n    if (!token) {\r\n      this.$router.push(\"/login\");\r\n    }\r\n    this.$http.defaults.headers.common[\"Authorization\"] = token;\r\n    const api = `${process.env.VUE_APP_API}api/user/check`;\r\n    this.$http.post(api).then((res) => {\r\n      if (!res.data.success) {\r\n        this.$router.push(\"/login\");\r\n      }\r\n    });\r\n  },\r\n  provide() {\r\n    return {\r\n      emitter,\r\n      pushMessagesState,\r\n    };\r\n  },\r\n};\r\n</script>","<template>\r\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div class=\"container-fluid\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <router-link to=\"/dashboard/products\" class=\"nav-link\"\r\n            >產品</router-link\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <router-link to=\"/dashboard/products\" class=\"nav-link\"\r\n            >訂單</router-link\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <router-link to=\"/dashboard/products\" class=\"nav-link\"\r\n            >優惠券</router-link\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\" @click.prevent=\"logout\">登出</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  methods: {\r\n    logout() {\r\n      const api = `${process.env.VUE_APP_API}logout`;\r\n      this.$http.post(api).then((res) => {\r\n        if (res.data.success) {\r\n          this.$router.push(\"/login\");\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>","import { render } from \"./NavbarComponent.vue?vue&type=template&id=98d18140\"\nimport script from \"./NavbarComponent.vue?vue&type=script&lang=js\"\nexport * from \"./NavbarComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\user\\\\Desktop\\\\vuecli\\\\vuetest1\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import mitt from \"mitt\";\r\n\r\nconst emitter = mitt();\r\n\r\nexport default emitter;\r\n","import emitter from \"@/methods/emitter\";\r\n\r\nexport default function (response, title = \"更新\") {\r\n  if (response.data.success) {\r\n    emitter.emit(\"push-message\", {\r\n      style: \"success\",\r\n      title: `${title}成功`,\r\n    });\r\n  } else {\r\n    const message =\r\n      typeof response.data.content === \"string\"\r\n        ? [response.data.content]\r\n        : response.data.content;\r\n    emitter.emit(\"push-message\", {\r\n      style: \"danger\",\r\n      title: `${title}失敗`,\r\n      content: message.join(\",\"),\r\n    });\r\n  }\r\n}\r\n","import { render } from \"./DashboardView.vue?vue&type=template&id=79316c34\"\nimport script from \"./DashboardView.vue?vue&type=script&lang=js\"\nexport * from \"./DashboardView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\user\\\\Desktop\\\\vuecli\\\\vuetest1\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createVNode","_component_Navbar","_createElementVNode","_component_router_view","_createElementBlock","_component_router_link","to","href","onClick","$options","methods","logout","api","this","$http","post","then","res","data","success","$router","push","__exports__","all","Map","on","type","handler","handlers","get","set","off","splice","indexOf","emit","evt","slice","map","emitter","mitt","response","title","style","message","content","join","components","Navbar","created","token","document","cookie","replace","defaults","headers","common","provide","pushMessagesState","render"],"sourceRoot":""}